//                       Apartment
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Group       gOutdoor                                                 "Outdoor"                                               <heating>                                                                                                                           ["Location"]                      {category="location"}
Group       gForecasts                                               "Forecasts"                                             <heating>                                                                                                                           ["Location"]                      {category="location"}
Group       gGarage                                                  "Garage"                                                <heating>                                                                                                                           ["Location"]                      {category="location"}
Group       gApartment                                               "Apartment"                                             <heating>                                                                                                                           ["Apartment"]                     {category="location"}
Group       gCore                                                    "Core subsystems"                                       <heating>                                                                                                                           ["Location"]                      {category="location"}

Group       gGroundFloor                                             "Ground floor"                                          <heating>        (gApartment)                                                                                                       ["GroundFloor"]                   {category="location"}
Group       gFirstFloor                                              "First floor"                                           <heating>        (gApartment)                                                                                                       ["FirstFloor"]                    {category="location"}

Group       gFamilyRoom                                              "Family room"                                           <heating>        (gGroundFloor)                                                                                                     ["FamilyRoom"]                    {category="location"}
Group       gKitchen                                                 "Kitchen"                                               <heating>        (gGroundFloor)                                                                                                     ["Kitchen"]                       {category="location"}
Group       gRestroom                                                "Restroom"                                              <heating>        (gGroundFloor)                                                                                                     ["Location"]                      {category="location"}
Group       gCorridor                                                "Corridor"                                              <heating>        (gGroundFloor)                                                                                                     ["Corridor"]                      {category="location"}

Group       gBedroom                                                 "Bedroom"                                               <heating>        (gFirstFloor)                                                                                                      ["Bedroom"]                       {category="location"}
Group       gBathroom                                                "Bathroom"                                              <heating>        (gFirstFloor)                                                                                                      ["Bathroom"]                      {category="location"}
Group       gAnnRoom                                                 "Ann room"                                              <heating>        (gFirstFloor)                                                                                                      ["Room"]                          {category="location"}
Group       gAliceRoom                                               "Alice room"                                            <heating>        (gFirstFloor)                                                                                                      ["Room"]                          {category="location"}

Group       gOffice                                                  "Office"                                                <heating>        (gBedroom)                                                                                                         ["Office"]                        {category="location"}

////////////////////////////////////////////////////////////////////////////////
//                       Scenarios
////////////////////////////////////////////////////////////////////////////////
Switch      HH_Lights_Scenario                                       "All lights"                                            <colorwheel>     (gScenariosList, gPersistenceScenario)
Group       gHH_Lights_Scenario                                      "Lightning"                                             <colorwheel>     (gScenarios)
Switch      GF_Lights_Scenario                                       "Ground floor"                                          <colorwheel>     (gScenariosList, gPersistenceScenario)
Group       gGF_Lights_Scenario                                      "GF_Lights_Scenario"                                    <heating>        (gScenarios, gHH_Lights_Scenario)
Switch      FF_Lights_Scenario                                       "First floor"                                           <colorwheel>     (gScenariosList, gPersistenceScenario)
Group       gFF_Lights_Scenario                                      "FF_Lights_Scenario"                                    <heating>        (gScenarios, gHH_Lights_Scenario)
Switch      GF_FamilyRoom_Scenario                                   "Upper lights"                                          <colorwheel>     (gScenariosList, gPersistenceScenario)                                                                                                               {ga="Light"}
Group       gGF_FamilyRoom_Scenario                                  "GF_FamilyRoom_Scenario"                                <heating>        (gScenarios, gGF_Lights_Scenario)
Switch      GF_ColorLights_Scenario                                  "Secondary lights"                                      <party>          (gScenariosList, gPersistenceScenario)
Group       gGF_ColorLights_Scenario                                 "GF_ColorLights_Scenario"                               <heating>        (gScenarios, gGF_Lights_Scenario)
Switch      GF_Kitchen_Scenario                                      "Kitchen"                                               <kitchen>        (gScenariosList, gPersistenceScenario)
Group       gGF_Kitchen_Scenario                                     "GF_Kitchen_Scenario"                                   <heating>        (gScenarios, gGF_Lights_Scenario)
Switch      GF_Corridor_Scenario                                     "Corridor"                                              <corridor>       (gScenariosList, gPersistenceScenario)
Group       gGF_Corridor_Scenario                                    "GF_Corridor_Scenario"                                  <heating>        (gScenarios, gGF_Lights_Scenario)
Switch      GF_Restroom_Scenario                                     "Restroom"                                              <corridor>       (gScenariosList, gPersistenceScenario)
Group       gGF_Restroom_Scenario                                    "GF_Restroom_Scenario"                                  <heating>        (gScenarios, gGF_Lights_Scenario)
Switch      FF_AnnRoom_Scenario                                      "Ann room"                                              <girl_2>         (gScenariosList, gPersistenceScenario)
Group       gFF_AnnRoom_Scenario                                     "FF_AnnRoom_Scenario"                                   <heating>        (gScenarios, gFF_Lights_Scenario)
Switch      FF_Bedroom_Scenario                                      "Bedroom"                                               <bedroom>        (gScenariosList, gPersistenceScenario)
Group       gFF_Bedroom_Scenario                                     "FF_Bedroom_Scenario"                                   <heating>        (gScenarios, gFF_Lights_Scenario)
Switch      FF_AliceRoom_Scenario                                    "Alice room"                                            <girl_3>         (gScenariosList, gPersistenceScenario)
Group       gFF_AliceRoom_Scenario                                   "FF_AliceRoom_Scenario"                                 <heating>        (gScenarios, gFF_Lights_Scenario)
Switch      FF_BathRoom_Scenario                                     "Bathroom"                                              <bath>           (gScenariosList, gPersistenceScenario)
Group       gFF_BathRoom_Scenario                                    "FF_BathRoom_Scenario"                                  <heating>        (gScenarios, gFF_Lights_Scenario)
Switch      GF_Cinema_Scenario                                       "Cinema"                                                <light>          (gScenariosList, gPersistenceScenario)
Group       gGF_Cinema_Scenario                                      "GF_Cinema_Scenario"                                    <heating>        (gScenarios)
Switch      GF_Motion_Mode                                           "Motion"                                                <rgb>            (gPersistenceSettings)
Switch      GF_Presence_Mode                                         "Presence"                                              <motion>         (gPersistenceSettings)
Switch      GF_Winter_Mode                                           "Winter"                                                <snow>           (gPersistenceSettings)

Switch      GF_Lucifer_Scene                                         "Lucifer"                                               <snow>           (gPersistenceSettings)                                                                                                                               {ga="Light"}
Switch      GF_Borg_Scene                                            "Borg"                                                  <snow>           (gPersistenceSettings)                                                                                                                               {ga="Light"}
Switch      GF_Evil_Scene                                            "Evil"                                                  <snow>           (gPersistenceSettings)                                                                                                                               {ga="Light"}
Switch      GF_Forrest_Scene                                         "Forrest"                                               <snow>           (gPersistenceSettings)                                                                                                                               {ga="Light"}

////////////////////////////////////////////////////////////////////////////////
//                       Switches
////////////////////////////////////////////////////////////////////////////////
Group       gFamilyRoomLightTable                                    "Family room table"                                                      (gFamilyRoom)                                                                                                      ["Lightbulb"]
Switch      GF_FamilyRoom_Light_Table                                "Family room table[]"                                   <light>          (gFamilyRoomLightTable, gTC2, gGF_FamilyRoom_Scenario, gPersistenceSwitch)                                         ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:GF_FamilyRoom_Light_Table"}
DateTime    GF_FamilyRoom_Light_Table_LastUpdate                     "Family room table [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gFamilyRoomLightSofa                                     "Family room sofa"                                                       (gFamilyRoom)                                                                                                      ["Lightbulb"]
Switch      GF_FamilyRoom_Light_Sofa                                 "Family room sofa[]"                                    <light>          (gFamilyRoomLightSofa, gTC2, gGF_FamilyRoom_Scenario, gPersistenceSwitch)                                          ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:GF_FamilyRoom_Light_Sofa"}
DateTime    GF_FamilyRoom_Light_Sofa_LastUpdate                      "Family room sofa [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gFamilyRoomLightsRGB                                     "Cinema"                                                                 (gFamilyRoom)                                                                                                      ["Lightbulb"]
Switch      GF_FamilyRoom_LightsRGB                                  "Cinema[]"                                              <light>          (gFamilyRoomLightsRGB, gSonoff, gGF_ColorLights_Scenario, gPersistenceSwitch, gLight)                              ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch03:PowerSwitch", ga="Light"}
DateTime    GF_FamilyRoom_LightsRGB_LastUpdate                       "Cinema [%1$td.%1$tm %1$tH:%1$tM]"                      <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gFamilyRoomLightsLamp                                    "Secondary lights"                                                       (gFamilyRoom)                                                                                                      ["Lightbulb"]
Switch      GF_FamilyRoom_LightsLamp                                 "Secondary lights[]"                                    <light>          (gFamilyRoomLightsLamp, gSonoff, gGF_ColorLights_Scenario, gPersistenceSwitch, gLight)                             ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch02:PowerSwitch", ga="Light"}
DateTime    GF_FamilyRoom_LightsLamp_LastUpdate                      "Secondary lights [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gKitchenLightMain                                        "Kitchen light main"                                                     (gKitchen)                                                                                                         ["Lightbulb"]
Switch      GF_Kitchen_Light_Main                                    "Kitchen light main[]"                                  <light>          (gKitchenLightMain, gTasmota, gGF_Kitchen_Scenario, gCinemaOff, gPersistenceSwitch)                                ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:WallSwitch02:PowerSwitch1", ga="Light"}
DateTime    GF_Kitchen_Light_Main_LastUpdate                         "Kitchen light main [%1$td.%1$tm %1$tH:%1$tM]"          <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gKitchenLightLED                                         "Kitchen light led"                                                      (gKitchen)                                                                                                         ["LightStripe"]
Switch      GF_Kitchen_Light_LED                                     "Kitchen light led[]"                                   <light>          (gKitchenLightLED, gTasmota, gGF_Kitchen_Scenario, gCinemaOff, gPersistenceSwitch)                                 ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:WallSwitch02:PowerSwitch2", ga="Light"}
DateTime    GF_Kitchen_Light_LED_LastUpdate                          "Kitchen light led [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gKitchenLED                                              "Kitchen led"                                                            (gKitchen)                                                                                                         ["LightStripe"]
Switch      GF_Kitchen_LED                                           "Kitchen led[]"                                         <light>          (gKitchenLED, gSonoff, gPersistenceSwitch)                                                                         ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch07:PowerSwitch", ga="Light"}

Group       gCorridorLightMain                                       "Main corridor lights"                                                   (gCorridor)                                                                                                        ["Lightbulb"]
Switch      GF_Corridor_Light_Main                                   "Main corridor lights[]"                                <light>          (gCorridorLightMain, gTC2, gGF_Corridor_Scenario, gCinemaOff, gPersistenceSwitch)                                  ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:GF_Corridor_Light_Main", ga="Light"}
DateTime    GF_Corridor_Light_Main_LastUpdate                        "Main corridor lights [%1$td.%1$tm %1$tH:%1$tM]"        <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gCorridorLightLED                                        "Corridor led"                                                           (gCorridor)                                                                                                        ["LightStripe"]
Switch      GF_Corridor_Light_LED                                    "Corridor led[]"                                        <light>          (gCorridorLightLED, gSonoff, gPersistenceSwitch)                                                                   ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch05:PowerSwitch", ga="Light"}
DateTime    GF_Corridor_Light_LED_LastUpdate                         "Corridor led [%1$td.%1$tm %1$tH:%1$tM]"                <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gCorridorLightCross                                      "Corridor cross"                                                         (gCorridor)                                                                                                        ["Lightbulb"]
Switch      GF_Corridor_Cross                                        "Corridor cross[]"                                      <light>          (gCorridorLightCross, gShelly, gPersistenceSwitch, gGF_Corridor_Scenario)                                          ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Shelly:GF_Corridor_Cross", ga="Light"}
DateTime    GF_Corridor_Cross_LastUpdate                             "Corridor cross [%1$td.%1$tm %1$tH:%1$tM]"              <time>           (gLastUpdateShelly, gPersistenceSwitch)

Group       gGarageLightCross                                        "Garage cross"                                                           (gGarage)                                                                                                          ["Lightbulb"]
Switch      GA_Garage_Cross                                          "Garage cross[]"                                        <light>          (gGarageLightCross, gSonoff, gGarageDetectors, gPersistenceSwitch)                                                 ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:GarageCross:PowerSwitch"}
DateTime    GA_Garage_Cross_LastUpdate                               "Garage cross [%1$td.%1$tm %1$tH:%1$tM]"                <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gCorridorStorage                                         "Corridor storage"                                                       (gCorridor)                                                                                                        ["LightStripe"]
Switch      GF_Corridor_Storage                                      "Corridor storage[]"                                    <light>          (gCorridorStorage, gSonoff, gPersistenceSwitch)                                                                    ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch04:PowerSwitch", ga="Light"}
DateTime    GF_Corridor_Storage_LastUpdate                           "Corridor storage [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gRestroomLightMain                                       "Restroom lights"                                                        (gRestroom)                                                                                                        ["Lightbulb"]
Switch      GF_Restroom_Light_Main                                   "Restroom lights[]"                                     <light>          (gRestroomLightMain, gTC2, gGF_Restroom_Scenario, gCinemaOff, gPersistenceSwitch)                                  ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:GF_Restroom_Light_Main", ga="Light"}
DateTime    GF_Restroom_Light_Main_LastUpdate                        "Restroom [%1$td.%1$tm %1$tH:%1$tM]"                    <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gBedroomLight                                            "Bedroom upper lights"                                                   (gBedroom)                                                                                                         ["Lightbulb"]
Switch      FF_Bedroom_Light_2                                       "Bedroom upper lights[]"                                <light>          (gBedroomLight, gTC2, gFF_Bedroom_Scenario, gPersistenceSwitch)                                                    ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:FF_Bedroom_Light_2", ga="Light"}
DateTime    FF_Bedroom_Light_2_LastUpdate                            "Bedroom upper lights [%1$td.%1$tm %1$tH:%1$tM]"        <time>           (gLastUpdateBroadlink, gPersistenceSwitch)

Group       gBedroomLights                                           "Relax"                                                                  (gBedroom)                                                                                                         ["LightStripe"]
Switch      FF_Bedroom_Lights                                        "Relax[]"                                               <light>          (gBedroomLights, gSonoff, gPersistenceSwitch)                                                                      ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch01:PowerSwitch", ga="Light"}
DateTime    FF_Bedroom_Lights_LastUpdate                             "Relax [%1$td.%1$tm %1$tH:%1$tM]"                       <time>           (gLastUpdateSonoff, gPersistenceSwitch)

Group       gBedroomWardrobe                                         "Wardrobe"                                                               (gBedroom)                                                                                                         ["LightStripe"]
Switch      FF_Bedroom_Wardobe                                       "Wardrobe[]"                                            <light>          (gBedroomWardrobe, gSonoff, gFF_Bedroom_Scenario, gPersistenceSwitch)                                              ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Switch06:PowerSwitch", ga="Light"}
DateTime    FF_Bedroom_Wardobe_LastUpdate                            "Wardobe [%1$td.%1$tm %1$tH:%1$tM]"                     <time>           (gLastUpdateSonoff, gPersistenceSwitch)


Group       gAliceRoomLight                                          "Alice room lights"                                                      (gAliceRoom)                                                                                                       ["Lightbulb"]
Switch      FF_AliceRoom_Light_2                                     "Alice room lights[]"                                   <light>          (gAliceRoomLight, gTC2, gFF_AliceRoom_Scenario, gPersistenceSwitch)                                                ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:FF_AliceRoom_Light_2", ga="Light"}
DateTime    FF_AliceRoom_Light_2_LastUpdate                          "Alice room lights [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateBroadlink, gPersistenceSwitch)


Group       gAnnRoomLight                                            "Ann room lights"                                                        (gAnnRoom)                                                                                                         ["Lightbulb"]
//DateTime FF_AliceRoom_Lights_LastUpdate "Alice room - lights [%1$td.%1$tm %1$tH:%1$tM]" <time> (gLastUpdateBroadlink, gPersistenceSwitch)
Switch      FF_AnnRoom_Light_Main                                    "Ann room lights[]"                                     <light>          (gAnnRoomLight, gTC2, gFF_AnnRoom_Scenario, gPersistenceSwitch)                                                    ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:Broadlink:FF_AnnRoom_Light_Main", ga="Light"}


Group       gBatchroomLight                                          "Bathroom lights"                                                        (gBathroom)                                                                                                        ["Lightbulb"]
Switch      FF_BathRoom_Light_Up                                     "Bathroom lights[]"                                     <light>          (gBatchroomLight, gTasmota, gFF_BathRoom_Scenario, gPersistenceSwitch)                                             ["Switch", "Opening"]             {channel="mqtt:topic:MyMQTTBroker:WallSwitch01:PowerSwitch", ga="Light"}
DateTime    FF_BathRoom_Light_Up_LastUpdate                          "Bathroom lights [%1$td.%1$tm %1$tH:%1$tM]"             <time>           (gLastUpdateBroadlink, gPersistenceSwitch)


String      GF_RTV_Complex_Scenario                                  "RTV"                                                   <rgb>            (gPersistenceSwitch)

////////////////////////////////////////////////////////////////////////////////
//                       RTV
////////////////////////////////////////////////////////////////////////////////
Switch      RTV_TV_TV                                                "Screen[]"                                              <screen>         (gFamilyRoom, gIRB, gRawRTV)                                                                                                                         {channel="mqtt:topic:MyMQTTBroker:Broadlink:RTV_TV_TV", ga="Switch"}
//Switch			RTV_TV_UPC												"UPC[]"													<projector>		(gFamilyRoom, gIRB, gRawRTV)																											{channel="mqtt:topic:MyMQTTBroker:Broadlink:RTV_TV_UPC", ga="Switch"}
//Switch			RTV_TV_XBOX												"XBox[]"												<screen>		(gFamilyRoom, gIRB, gRawRTV)																											{channel="mqtt:topic:MyMQTTBroker:Broadlink:RTV_TV_XBOX", ga="Switch"}
String      RTV_TV_Input                                             "Television[]"                                          <projector>      (gFamilyRoom, gSony, gPersistenceSwitch)                                                                                                             {channel="mqtt:topic:MyMQTTBroker:Sony:RTV_TV_Input"}
//Switch			RTV_TV_CONFIRM											"Confirm[]"											<screen>		(gFamilyRoom, gSony)
Switch      RTV_VOLUME_UP                                            "Volume Up[]"                                                            (gFamilyRoom, gSony)
Switch      RTV_VOLUME_DOWN                                          "Volume Down[]"                                                          (gFamilyRoom, gSony)
Switch      RTV_VOLUME_MUTE                                          "Mute[]"                                                                 (gFamilyRoom, gSony)


////////////////////////////////////////////////////////////////////////////////
//                       Google Home scenes
////////////////////////////////////////////////////////////////////////////////
Switch      GH_DailyInfo                                             "Daily info[]"                                                           (gVoice)                                                                                                                                             {ga="Switch"}
Switch      GH_BathroomInfo                                          "Bathroom info[]"                                                        (gVoice)                                                                                                                                             {ga="Switch"}
Switch      GH_SensorsInfo                                           "Sensors info[]"                                                         (gVoice)                                                                                                                                             {ga="Switch"}
Switch      GH_Holiday                                               "Holiday[]"                                                              (gScenes)
Switch      GH_WelcomeBack                                           "Welcome back[]"                                                         (gScenes)
Switch      GH_Night_Scene                                           "Good night[]"                                                           (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_TVShow_Scene                                          "TV Show[]"                                                              (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_Room_Scene                                            "Room[]"                                                                 (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_Bedroom_Night_Scene                                   "Go to sleep[]"                                                          (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_Evening_Scene                                         "Good evening[]"                                                         (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_Day_Scene                                             "Good morning[]"                                                         (gScenes)                                                                                                                                            {ga="Switch"}
Switch      GH_DarkWindow_Scene                                      "Dark window[]"                                                          (gScenes)
Switch      GH_BrightWindow_Scene                                    "Bright window[]"                                                        (gScenes)
Switch      GH_XBOX_Command                                          "XBox[]"                                                                 (gSystem)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Sony:Command_XBOX", ga="Switch"}
Switch      GH_Netflix_Command                                       "Netflix[]"                                                              (gSystem)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Sony:Command_Netflix", ga="Switch"}
Switch      GH_YouTube_Command                                       "Youtube[]"                                                              (gSystem)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Sony:Command_Youtube", ga="Switch"}
Switch      GH_TV_Command                                            "TV[]"                                                                   (gSystem)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Sony:Command_TV", ga="Switch"}
Switch      GH_Confirm_Command                                       "Enter[]"                                                                (gSystem)
Switch      GH_Reset_Scene                                           "Reset[]"                                                                (gScenes)                                                                                                                                            {ga="Switch"}

////////////////////////////////////////////////////////////////////////////////
//                       Sensors
////////////////////////////////////////////////////////////////////////////////
Group       gFamilyRoomMultisensor                                   "Family room multisensor"                                                (gFamilyRoom)                                                                                                      ["Sensor"]
Number      GF_FamilyRoom_Indoor_Temperature_Sensor                  "Family room temperature [%.1f \u00b0C]"                <temperature>    (gFamilyRoomMultisensor, gSensorTemperature, gPersistenceSensorTemperature, gEQ3FamilyRoomTemp)                    ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor03:Temperature"}
Number      GF_FamilyRoom_Indoor_Humidity_Sensor                     "Family room humidity [%.1f %%]"                        <humidity>       (gFamilyRoomMultisensor, gSensorHumidity, gPersistenceSensorHumidity)                                              ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor03:Humidity"}
Number      GF_FamilyRoom_Analog_Sensor                              "Family room brightness [%.0f]"                         <heating>        (gFamilyRoomMultisensor, gSensorAnalog, gSensorBrightness, gPersistenceSensorBrightness)                           ["Measurement", "Light"]          {channel="mqtt:topic:MyMQTTBroker:Multisensor03:Brightness"}
Number      GF_FamilyRoom_RSSI                                       "8266 Family room RSSI [%.0f]"                          <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Multisensor03:RSSI"}
String      GF_FamilyRoom_Heartbeat                                  "8266 Family room [%s]"                                                  (gFamilyRoom, gHeartbeat)                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Multisensor03:Heartbeat"}
DateTime    GF_FamilyRoom_Heartbeat_LastUpdate                       "8266 Family room [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_FamilyRoom_Heartbeat_LastUpdate_Error                 "8266 Family room"                                      <time>           (gErrors, gPersistenceStatusUpdate)


Group       gKitchenMultisensor                                      "Kitchen multisensor"                                                    (gKitchen)                                                                                                         ["Sensor"]
Number      GF_Kitchen_Indoor_Temperature_Sensor                     "Kitchen temperature [%.1f \u00b0C]"                    <temperature>    (gKitchenMultisensor, gSensorTemperature, gPersistenceSensorTemperature, gEQ3KitchenTemp)                          ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor02:Temperature"}
Number      GF_Kitchen_Indoor_Humidity_Sensor                        "Kitchen humidity [%.1f %%]"                            <humidity>       (gKitchenMultisensor, gSensorHumidity, gPersistenceSensorHumidity)                                                 ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor02:Humidity"}
Number      GF_Kitchen_RSSI                                          "8266 Kitchen RSSI [%.0f]"                              <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Multisensor02:RSSI"}
String      GF_Kitchen_Heartbeat                                     "8266 Kitchen [%s]"                                                      (gKitchen, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Multisensor02:Heartbeat"}
DateTime    GF_Kitchen_Heartbeat_LastUpdate                          "8266 Kitchen [%1$td.%1$tm %1$tH:%1$tM]"                <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_Kitchen_Heartbeat_LastUpdate_Error                    "8266 Kitchen"                                          <time>           (gErrors, gPersistenceStatusUpdate)

Group       gOutdoorMultisensor                                      "Outdoor multisensor"                                                    (gOutdoor)                                                                                                         ["Sensor"]
Number      GF_FamilyRoom_Outdoor_Temperature_Sensor                 "External [%.1f \u00b0C]"                               <temperature>    (gOutdoorMultisensor, gSensorTemperature, gSensorExternalTemperature, gPersistenceSensorTemperature)               ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor03:OutdoorTemperature", synonyms="Example temperature", ga="TemperatureSensor", roomHint="Family room"}
Number      FF_AnnRoom_Outdoor_Temperature_Sensor                    "Ann room external [%.1f \u00b0C]"                      <temperature>    (gOutdoorMultisensor, gSensorTemperature, gSensorExternalTemperature, gPersistenceSensorTemperature)               ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor05:OutdoorTemperature", synonyms="Ann room external temperature", ga="TemperatureSensor", roomHint="Ann room"}
Number      FF_Bedroom_Pressure_Sensor                               "Bedroom pressure [%.1f hPa]"                           <pressure>       (gOutdoorMultisensor, gSensorPressure, gPressureTest, gPersistenceSensorPressure)                                  ["Measurement", "Pressure"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor01:Pressure"}
Number      FF_AliceRoom_Pressure_Sensor                             "Alice room pressure [%.1f hPa]"                        <pressure>       (gOutdoorMultisensor, gPressureTest, gPersistenceSensorPressure)                                                   ["Measurement", "Pressure"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor04:Pressure"}
Number      GF_Kitchen_Pressure_Sensor                               "Pressure kitchen [%.1f hPa]"                           <pressure>       (gOutdoorMultisensor, gSensorPressure, gPressureTest, gPersistenceSensorPressure)                                  ["Measurement", "Pressure"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor02:Pressure"}
Number      GF_FamilyRoom_Pressure_Sensor                            "Pressure [%.1f hPa]"                                   <pressure>       (gOutdoorMultisensor, gSensorPressure, gPressureTest, gPersistenceSensorPressure)                                  ["Measurement", "Pressure"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor03:Pressure"}
Number      GA_Garage_Pressure_Sensor                                "Garage pressure [%.1f hPa]"                            <pressure>       (gOutdoorMultisensor, gSensorPressure, gPressureTest, gPersistenceSensorPressure)                                  ["Measurement", "Pressure"]       {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:Pressure"}

Group       gAnnRoomMultisensor                                      "Ann room multisensor"                                                   (gAnnRoom)                                                                                                         ["Sensor"]
Number      FF_AnnRoom_Indoor_Temperature_Sensor                     "Ann room temperature [%.1f \u00b0C]"                   <temperature>    (gAnnRoomMultisensor, gSensorTemperature, gPersistenceSensorTemperature, gEQ3AnnRoomTemp)                          ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor05:Temperature"}
Number      FF_AnnRoom_Indoor_Humidity_Sensor                        "Ann room humidity [%.1f %%]"                           <humidity>       (gAnnRoomMultisensor, gSensorHumidity, gPersistenceSensorHumidity)                                                 ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor05:Humidity"}

Group       gBedroomMultisensor                                      "Bedroom multisensor"                                                    (gBedroom)                                                                                                         ["Sensor"]
Number      FF_Bedroom_Indoor_Temperature_Sensor                     "Bedroom temperature [%.1f \u00b0C]"                    <temperature>    (gBedroomMultisensor, gSensorTemperature, gPersistenceSensorTemperature, gEQ3BedroomTemp)                          ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor01:Temperature"}
Number      FF_Bedroom_Indoor_Humidity_Sensor                        "Bedroom humidity [%.1f %%]"                            <humidity>       (gBedroomMultisensor, gSensorHumidity, gPersistenceSensorHumidity)                                                 ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor01:Humidity"}
Number      FF_Bedroom_Analog_Sensor                                 "Bedroom brightness [%.0f]"                             <heating>        (gBedroomMultisensor, gSensorBrightness, gSensorAnalog, gPersistenceSensorBrightness)                              ["Measurement", "Light"]          {channel="mqtt:topic:MyMQTTBroker:Multisensor01:Brightness"}
Number      FF_Bedroom_RSSI                                          "8266 Bedroom RSSI [%.0f]"                              <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Multisensor01:RSSI"}
String      FF_Bedroom_Heartbeat                                     "8266 Bedroom [%s]"                                                      (gBedroom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Multisensor01:Heartbeat"}
DateTime    FF_Bedroom_Heartbeat_LastUpdate                          "8266 Bedroom [%1$td.%1$tm %1$tH:%1$tM]"                <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_Bedroom_Heartbeat_LastUpdate_Error                    "8266 Bedroom"                                          <time>           (gErrors, gPersistenceStatusUpdate)

Group       gGarageMultisensor                                       "Garage multisensor"                                                     (gGarage)                                                                                                          ["Sensor"]
Number      GA_Garage_Indoor_Temperature_Sensor                      "Garage temperature [%.1f \u00b0C]"                     <temperature>    (gGarageMultisensor, gSensorTemperature, gPersistenceSensorTemperature)                                            ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:Temperature"}
Number      GA_Garage_Indoor_Humidity_Sensor                         "Garage humidity [%.1f %%]"                             <humidity>       (gGarageMultisensor, gSensorHumidity, gPersistenceSensorHumidity)                                                  ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:Humidity"}
Number      GA_Garage_Analog_Sensor                                  "Garage brightness [%.0f]"                              <heating>        (gGarageMultisensor, gSensorBrightness, gSensorAnalog, gPersistenceSensorBrightness)                               ["Measurement", "Light"]          {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:Brightness"}
Number      GA_Garage_RSSI                                           "8266 Garage RSSI [%.0f]"                               <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:RSSI"}
String      GA_Garage_Heartbeat                                      "8266 Garage [%s]"                                                       (gGarage, gHeartbeat)                                                                                                                                {channel="mqtt:topic:MyMQTTBroker:GarageMultisensor:Heartbeat"}
DateTime    GA_Garage_Heartbeat_LastUpdate                           "8266 Garage [%1$td.%1$tm %1$tH:%1$tM]"                 <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GA_Garage_Heartbeat_LastUpdate_Error                     "8266 Garage"                                           <time>           (gErrors, gPersistenceStatusUpdate)

Group       gAliceRoomMultisensor                                    "Alice room multisensor"                                                 (gAliceRoom)                                                                                                       ["Sensor"]
Number      FF_AliceRoom_Indoor_Temperature_Sensor                   "Alice room temperature [%.1f \u00b0C]"                 <temperature>    (gAliceRoomMultisensor, gSensorTemperature, gTemperatureTest, gPersistenceSensorTemperature, gEQ3AliceRoomTemp)    ["Measurement", "Temperature"]    {channel="mqtt:topic:MyMQTTBroker:Multisensor04:Temperature"}
Number      FF_AliceRoom_Indoor_Humidity_Sensor                      "Alice room humidity[%.1f%%]"                           <humidity>       (gAliceRoomMultisensor, gSensorHumidity, gHumidityTest, gPersistenceSensorHumidity)                                ["Measurement", "Humidity"]       {channel="mqtt:topic:MyMQTTBroker:Multisensor04:Humidity"}
Number      FF_AliceRoom_Analog_Sensor                               "Alice room brightness [%.0f]"                          <heating>        (gAliceRoomMultisensor, gSensorAnalog, gSensorBrightness, gPersistenceSensorBrightness)                            ["Measurement", "Light"]          {channel="mqtt:topic:MyMQTTBroker:Multisensor04:Brightness"}
Number      FF_AliceRoom_RSSI                                        "8266 Alice room RSSI [%.0f]"                           <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Multisensor04:RSSI"}
String      FF_AliceRoom_Heartbeat                                   "8266 Alice room [%s]"                                                   (gAliceRoom, gHeartbeat)                                                                                                                             {channel="mqtt:topic:MyMQTTBroker:Multisensor04:Heartbeat"}
DateTime    FF_AliceRoom_Heartbeat_LastUpdate                        "8266 Alice room [%1$td.%1$tm %1$tH:%1$tM]"             <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_AliceRoom_Heartbeat_LastUpdate_Error                  "8266 Alice room"                                       <time>           (gErrors, gPersistenceStatusUpdate)

////////////////////////////////////////////////////////////////////////////////
//                       Slack
////////////////////////////////////////////////////////////////////////////////
Switch      vSlack_Send                                              "Send slack"                                                             (gNotification)

////////////////////////////////////////////////////////////////////////////////
//                       Heartbeats
////////////////////////////////////////////////////////////////////////////////
Number      GF_KitchenWall_RSSI                                      "Minitiger Kitchen RSSI [%.0f]"                         <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:WallSwitch02:RSSI"}
String      GF_KitchenWall_Heartbeat                                 "Minitiger Kitchen [%s]"                                                 (gKitchen, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:WallSwitch02:Heartbeat"}
DateTime    GF_KitchenWall_Heartbeat_LastUpdate                      "Minitiger Kitchen [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_KitchenWall_Heartbeat_LastUpdate_Error                "Minitiger Kitchen"                                     <time>           (gErrors, gPersistenceSwitch)
Number      FF_BathroomWall_RSSI                                     "Sonoff Bathroom RSSI [%.0f]"                           <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:WallSwitch01:RSSI"}
String      FF_BathroomWall_Heartbeat                                "Sonoff Bathroom [%s]"                                                   (gKitchen, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:WallSwitch01:Heartbeat"}
DateTime    FF_BathroomWall_Heartbeat_LastUpdate                     "Sonoff Bathroom [%1$td.%1$tm %1$tH:%1$tM]"             <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_BathroomWall_Heartbeat_LastUpdate_Error               "Sonoff Bathroom"                                       <time>           (gErrors, gPersistenceSwitch)
String      GF_FamilyRoomRollershutter_Heartbeat                     "8266 Family room blinds [%s]"                                           (gFamilyRoom, gHeartbeat)                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:HeartbeatFamilyRoomRollershutter"}
DateTime    GF_FamilyRoomRollershutter_Heartbeat_LastUpdate          "8266 Family room blinds [%1$td.%1$tm %1$tH:%1$tM]"     <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_FamilyRoomRollershutter_Heartbeat_LastUpdate_Error    "8266 Family room blinds"                               <time>           (gErrors, gPersistenceStatusUpdate)
DateTime    GF_FamilyRoomRollershutter_Health_LastUpdate             "Family room blinds [%1$td.%1$tm %1$tH:%1$tM]"          <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_FamilyRoomRollershutter_Health_LastUpdate_Error       "Family room blinds health"                             <time>           (gErrors, gPersistenceStatusUpdate)
String      FF_BedroomRollershutter_Heartbeat                        "8266 Bedroom blinds [%s]"                                               (gBedroom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:HeartbeatBedroomRollershutter"}
DateTime    FF_BedroomRollershutter_Heartbeat_LastUpdate             "8266 Bedroom blinds [%1$td.%1$tm %1$tH:%1$tM]"         <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_BedroomRollershutter_Heartbeat_LastUpdate_Error       "8266 Bedroom blinds"                                   <time>           (gErrors, gPersistenceStatusUpdate)
DateTime    FF_BedroomRollershutter_Health_LastUpdate                "Bedroom blinds [%1$td.%1$tm %1$tH:%1$tM]"              <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_BedroomRollershutter_Health_LastUpdate_Error          "Bedroom blinds health"                                 <time>           (gErrors, gPersistenceStatusUpdate)
Number      FF_AnnRoom_RSSI                                          "8266 Ann room RSSI [%.0f]"                             <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Multisensor05:RSSI"}
String      FF_AnnRoom_Heartbeat                                     "8266 Ann room [%s]"                                                     (gAnnRoom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Multisensor05:Heartbeat"}
DateTime    FF_AnnRoom_Heartbeat_LastUpdate                          "8266 Ann room  [%1$td.%1$tm %1$tH:%1$tM]"              <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_AnnRoom_Heartbeat_LastUpdate_Error                    "8266 Ann room"                                         <time>           (gErrors, gPersistenceStatusUpdate)
String      FF_TechnicalRoom1_Heartbeat                              "8266 Technical 1 [%s]"                                                  (gAnnRoom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:HeartbeatTechnicalRoom1"}
DateTime    FF_TechnicalRoom1_Heartbeat_LastUpdate                   "8266 Technical 1 [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_TechnicalRoom1_Heartbeat_LastUpdate_Error             "8266 Technical 1"                                      <time>           (gErrors, gPersistenceStatusUpdate)
Number      FF_TechnicalRoom1_Uptime                                 "Technical room 1 uptime [%.4f]"                        <heating>        (gUptime)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:TechnicalRoom1Uptime"}
Number      FF_TechnicalRoom1_RSSI                                   "Technical room 1 RSSI [%.0f]"                          <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:TechnicalRoom1RSSI"}
String      FF_TechnicalRoom2_Heartbeat                              "8266 Technical 2 [%s]"                                                  (gAnnRoom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:HeartbeatTechnicalRoom2"}
DateTime    FF_TechnicalRoom2_Heartbeat_LastUpdate                   "8266 Technical 2 [%1$td.%1$tm %1$tH:%1$tM]"            <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_TechnicalRoom2_Heartbeat_LastUpdate_Error             "8266 Technical 2"                                      <time>           (gErrors, gPersistenceStatusUpdate)
Number      FF_TechnicalRoom2_Uptime                                 "Technical room 2 uptime [%.4f]"                        <heating>        (gUptime)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:TechnicalRoom2Uptime"}
Number      FF_TechnicalRoom2_RSSI                                   "Technical room 2 RSSI [%.0f]"                          <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:TechnicalRoom2RSSI"}
Switch      HW_Heartbeat                                             "Heartbeat"
Switch      HW_RMPro_Heartbeat_Ticker                                "RMPro Ticker"                                                           (gSystem)                                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Broadlink:HW_RMPro_Heartbeat"}
String      HW_RMPro_Heartbeat                                       "RM Pro [%s]"                                                            (gFamilyRoom, gHeartbeat)                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:HeartbeatRMPro"}
DateTime    HW_RMPro_Heartbeat_LastUpdate                            "RM Pro [%1$td.%1$tm %1$tH:%1$tM]"                      <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      HW_RMPro_Heartbeat_LastUpdate_Error                      "RM Pro"                                                <time>           (gErrors, gPersistenceStatusUpdate)
Number      GF_FamilyRoom_LightsRGB_RSSI                             "Sonoff Family room led RSSI [%.0f]"                    <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch03:RSSI"}
String      GF_FamilyRoom_LightsRGB_Heartbeat                        "Sonoff Family room led [%s]"                                            (gFamilyRoom, gHeartbeat)                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Switch03:Heartbeat"}
DateTime    GF_FamilyRoom_LightsRGB_Heartbeat_LastUpdate             "Sonoff Family room led [%1$td.%1$tm %1$tH:%1$tM]"      <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_FamilyRoom_LightsRGB_Heartbeat_LastUpdate_Error       "Sonoff Family room led"                                <time>           (gErrors, gPersistenceStatusUpdate)
Number      GF_FamilyRoom_LightsLamp_RSSI                            "Sonoff Family room lamps RSSI [%.0f]"                  <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch02:RSSI"}
String      GF_FamilyRoom_LightsLamp_Heartbeat                       "Sonoff Family room lamps [%s]"                                          (gFamilyRoom, gHeartbeat)                                                                                                                            {channel="mqtt:topic:MyMQTTBroker:Switch02:Heartbeat"}
DateTime    GF_FamilyRoom_LightsLamp_Heartbeat_LastUpdate            "Sonoff Family room lamps [%1$td.%1$tm %1$tH:%1$tM]"    <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_FamilyRoom_LightsLamp_Heartbeat_LastUpdate_Error      "Sonoff Family room lamps"                              <time>           (gErrors, gPersistenceStatusUpdate)
Number      GA_Garage_Cross_RSSI                                     "Shelly Garage cross RSSI [%.0f]"                       <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:GarageCross:RSSI"}
String      GA_Garage_Cross_Heartbeat                                "Shelly Garage cross [%s]"                                               (gGarage, gHeartbeat)                                                                                                                                {channel="mqtt:topic:MyMQTTBroker:GarageCross:Heartbeat"}
DateTime    GA_Garage_Cross_Heartbeat_LastUpdate                     "Shelly Garage cross [%1$td.%1$tm %1$tH:%1$tM]"         <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GA_Garage_Cross_Heartbeat_LastUpdate_Error               "Shelly Garage cross []"                                <time>           (gErrors, gPersistenceStatusUpdate)
Number      GF_Corridor_Light_LED_RSSI                               "Sonoff Corridor led RSSI [%.0f]"                       <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch05:RSSI"}
String      GF_Corridor_Light_LED_Heartbeat                          "Sonoff Corridor led [%s]"                                               (gCorridor, gHeartbeat)                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch05:Heartbeat"}
String      GF_Kitchen_LED_Heartbeat                                 "Sonoff Kitchen led [%s]"                                                (gCorridor, gHeartbeat)                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch07:Heartbeat"}
DateTime    GF_Corridor_Light_LED_Heartbeat_LastUpdate               "Sonoff Corridor led [%1$td.%1$tm %1$tH:%1$tM]"         <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
DateTime    GF_Kitchen_LED_Heartbeat_LastUpdate                      "Sonoff Kitchen led [%1$td.%1$tm %1$tH:%1$tM]"          <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_Corridor_Light_LED_Heartbeat_LastUpdate_Error         "Sonoff Corridor led[]"                                 <time>           (gErrors, gPersistenceStatusUpdate)
Switch      GF_Kitchen_LED_Heartbeat_LastUpdate_Error                "Sonoff Kitchen[]"                                      <time>           (gErrors, gPersistenceStatusUpdate)
//Number      GF_Kitchen_LED_Uptime                                    "Kitchen LED uptime [%.4f]"                             <heating>        (gUptime)                                                                         {channel="mqtt:topic:MyMQTTBroker:Heartbeat_Sensor:KitchenLEDUptime"}
Number      GF_Kitchen_LED_RSSI                                      "Kitchen LED RSSI [%.0f]"                               <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch07:RSSI"}
Number      GF_Corridor_Storage_RSSI                                 "Sonoff Corridor shelfs RSSI [%.0f]"                    <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch04:RSSI"}
String      GF_Corridor_Storage_Heartbeat                            "Sonoff Corridor shelfs [%s]"                                            (gCorridor, gHeartbeat)                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch04:Heartbeat"}
DateTime    GF_Corridor_Storage_Heartbeat_LastUpdate                 "Sonoff Corridor shelfs [%1$td.%1$tm %1$tH:%1$tM]"      <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      GF_Corridor_Storage_Heartbeat_LastUpdate_Error           "Sonoff Corridor shelfs"                                <time>           (gErrors, gPersistenceStatusUpdate)
Number      FF_Bedroom_Lights_RSSI                                   "Sonoff Bedroom RSSI [%.0f]"                            <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch01:RSSI"}
String      FF_Bedroom_Lights_Heartbeat                              "Sonoff Bedroom LED[%s]"                                                 (gBedroom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Switch01:Heartbeat"}
DateTime    FF_Bedroom_Lights_Heartbeat_LastUpdate                   "Sonoff Bedroom LED [%1$td.%1$tm %1$tH:%1$tM]"          <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_Bedroom_Lights_Heartbeat_LastUpdate_Error             "Sonoff Bedroom LED[]"                                  <time>           (gErrors, gPersistenceStatusUpdate)
Number      FF_Bedroom_Wardobe_RSSI                                  "Sonoff Bedroom wardrobe RSSI [%.0f]"                   <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:Switch06:RSSI"}
String      FF_Bedroom_Wardobe_Heartbeat                             "Sonoff Bedroom wardrobe[%s]"                                            (gBedroom, gHeartbeat)                                                                                                                               {channel="mqtt:topic:MyMQTTBroker:Switch06:Heartbeat"}
DateTime    FF_Bedroom_Wardobe_Heartbeat_LastUpdate                  "Sonoff Bedroom wardrobe [%1$td.%1$tm %1$tH:%1$tM]"     <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      FF_Bedroom_Wardobe_Heartbeat_LastUpdate_Error            "Sonoff Bedroom wardrobe[]"                             <time>           (gErrors, gPersistenceStatusUpdate)
Switch      HardResetButton                                          "Hard Reset Button[]"                                                    (gSystem)
Switch      DebugButton                                              "Debug Button[]"                                                         (gSystem)
String      DebugTarget                                              "Target [%s]"
String      DebugMessage                                             "Message [%s]"
Switch      DemoMode                                                 "Demo mode[]"                                                            (gSystem, gPersistenceSettings)
Switch      OverallErrorIndicator                                    "Error indicator[]"                                     <heating>        (gSystem, gPersistenceSettings, gAlert)


Group       gPowermeterPlug01                                        "Laptop power plug"                                                      (gFamilyRoom)                                                                                                      ["PowerOutlet"]
Switch      HH_PowermeterPlug01                                      "Universal[]"                                           <light>          (gPowermeterPlug01, gTasmota, gPersistenceSwitch)                                                                  ["Switch"]                        {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:PowerSwitch", ga="Switch"}
Number      HH_PowermeterPlug01_Power                                "Powermeter01 plug power [%.0fW]"                       <power>          (gPowermeterPlug01, gSensorPower, gPersistenceSensorPower)                                                         ["Measurement", "Power"]          {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Power"}
Number      HH_PowermeterPlug01_ReactivePower                        "Powermeter01 plug reactive power [%.0f Var]"           <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:ReactivePower"}
Number      HH_PowermeterPlug01_ApparentPower                        "Powermeter01 plug apparent power [%.0f VA]"            <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:ApparentPower"}
Number      HH_PowermeterPlug01_TotalPower                           "Powermeter01 plug total power [%.3f kWh]"              <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Total"}
Number      HH_PowermeterPlug01_YesterdayPower                       "Powermeter01 plug yesterday power [%.3f kWh]"          <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Yesterday"}
Number      HH_PowermeterPlug01_TodayPower                           "Powermeter01 plug today power [%.3f kWh]"              <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Today"}
Number      HH_PowermeterPlug01_Factor                               "Powermeter01 plug factor [%.2f]"                       <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Factor"}
Number      HH_PowermeterPlug01_RSSI                                 "Powermeter01 plug RSSI [%.0f]"                         <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:RSSI"}
String      HH_PowermeterPlug01_Heartbeat                            "Powermeter01 plug [%s]"                                                 (gHeartbeat)                                                                                                                                         {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug01:Heartbeat"}
DateTime    HH_PowermeterPlug01_Heartbeat_LastUpdate                 "Powermeter01 plug [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      HH_PowermeterPlug01_Heartbeat_LastUpdate_Error           "Powermeter01 plug"                                     <time>           (gPersistenceStatusUpdate)

Group       gPowermeterPlug02                                        "Office power plug"                                                      (gOffice)                                                                                                          ["PowerOutlet"]
Switch      HH_PowermeterPlug02                                      "PC[]"                                                  <light>          (gPowermeterPlug02, gTasmota, gPersistenceSwitch)                                                                  ["Switch"]                        {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:PowerSwitch", ga="Switch"}
Number      HH_PowermeterPlug02_Power                                "Powermeter02 plug power [%.0fW]"                       <power>          (gPowermeterPlug02, gSensorPower, gPersistenceSensorPower)                                                         ["Measurement", "Power"]          {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Power"}
Number      HH_PowermeterPlug02_ReactivePower                        "Powermeter02 plug reactive power [%.0f Var]"           <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:ReactivePower"}
Number      HH_PowermeterPlug02_ApparentPower                        "Powermeter02 plug apparent power [%.0f VA]"            <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:ApparentPower"}
Number      HH_PowermeterPlug02_TotalPower                           "Powermeter02 plug total power [%.3f kWh]"              <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Total"}
Number      HH_PowermeterPlug02_YesterdayPower                       "Powermeter02 plug yesterday power [%.3f kWh]"          <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Yesterday"}
Number      HH_PowermeterPlug02_TodayPower                           "Powermeter02 plug today power [%.3f kWh]"              <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Today"}
Number      HH_PowermeterPlug02_Factor                               "Powermeter02 plug factor [%.2f]"                       <power>          (gSensorPower, gPersistenceSensorPower)                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Factor"}
Number      HH_PowermeterPlug02_RSSI                                 "Powermeter02 plug RSSI [%.0f]"                         <heating>        (gRSSI)                                                                                                                                              {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:RSSI"}
String      HH_PowermeterPlug02_Heartbeat                            "Powermeter02 plug [%s]"                                                 (gHeartbeat)                                                                                                                                         {channel="mqtt:topic:MyMQTTBroker:PowermeterPlug02:Heartbeat"}
DateTime    HH_PowermeterPlug02_Heartbeat_LastUpdate                 "Powermeter02 plug [%1$td.%1$tm %1$tH:%1$tM]"           <time>           (gLastUpdateHeartbeat, gLastUpdateTimeout)
Switch      HH_PowermeterPlug02_Heartbeat_LastUpdate_Error           "Powermeter02 plug"                                     <time>           (gErrors, gPersistenceStatusUpdate)

DateTime    FF_Bathroom_Entry_Time                                   "Bathroom entrytime [%s]"                               <time>
Switch      FF_Bathroom_Entry_Confirmation                           "Bathroom entry confirmation [%s]"                      <time>
Number      FF_Bathroom_Occupation_Minutes                           "Bathroom occupation [%.0f]"                            <time>
