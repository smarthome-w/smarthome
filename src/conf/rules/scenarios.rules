rule "scenario_rule"
when
    Member of gScenariosList received update
then
  try {
    val GroupItem state_group = gScenarios.members.findFirst[name.equals("g" + triggeringItem.name)]
    val OnOffType set_state = triggeringItem.state

    //logInfo("scenario", "Object {}: {}", state_group.name, set_state)
    state_group.members.forEach [E |
      if (E.type == "Switch") {
        sendCommand(E, set_state)
      } else if (E.type == "Group") {
        val scenarioName = E.name.substring(1, E.name.length)
        val GroupItem subscenario = gScenariosList.members.findFirst[name.equals(scenarioName)]
        //logInfo("scenario", "Scenario {}:{}", scenarioName, subscenario)
        if (subscenario !== null) {
          //logInfo("scenario", "Send {} to {}", set_state, subscenario)
          sendCommand(subscenario, set_state)
        }
      } else {
        logInfo("scenario", "Unknown {}:{}", E, E.type)
      }
    ]
  } catch (Throwable t) {
    logError("Error", "Error in scenario_rule {} {} {}", triggeringItem.name, triggeringItem.state, t.toString())
  } finally {
  }
end
