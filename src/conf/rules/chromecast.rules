rule "say_main_lock_unlocked_rule"
when
  Time cron "0 */5 20-23 ? * MON-SUN"
then
  var warningHour = 22
  if (HH_LockWarningHour.state !== NULL) {
    warningHour = (HH_LockWarningHour.state as Number).intValue
  }
  val hourOfDay = now.getHourOfDay as Number
    
  if (CIR_GF_MainLock.state.toString() == "OPEN" && hourOfDay >= warningHour) {
    // For local only http because of untrusted certificate
    val mainLockUnlockedURI = "http://192.168.0.4/static/sounds/main_lock_is_unlocked.mp3"

    logError("Chromecast", "Main lock unlocked - play - {}", mainLockUnlockedURI)
    FamilyRoomChromecastMediaURI.sendCommand(mainLockUnlockedURI)
    BedroomChromecastMediaURI.sendCommand(mainLockUnlockedURI)
    logError("Chromecast", "Main lock unlocked - end - {}", mainLockUnlockedURI)
  }
end

rule "say_text"
when
  Item ttsText received update
then
  var key = "66d531cf46544319bd7cbca26d80aa76"

//  logError("Chromecast", "Start")
  if (ttsText.state !== NULL) {
    var textToSpeech = ttsText.state.toString()
    var language = ttsLanguage.state.toString()

    logError("Chromecast", "Text: {}", textToSpeech)
    var textURI = "https://api.voicerss.org/?key=" + key + "&hl=" + language + "&src=" + textToSpeech

//    logError("Chromecast", "Text play - play - {}", textToSpeech)
    FamilyRoomChromecastMediaURI.sendCommand(textURI)
    BedroomChromecastMediaURI.sendCommand(textURI)
    logError("Chromecast", "Text play - end - {}", textToSpeech)
  }
end

rule "trigger_text"
when
  Item Dummy received update
then
//  var ttsMessage = "Current power consumption is " + GF_PowerMeter_Current_In_Watts.state + " watts."
//  var lang = "en-us"

  var ttsMessage = "Bieżące zużycie energii to " + GF_PowerMeter_Current_In_Watts.state + " watów."
  var lang = "pl-pl"

  ttsLanguage.sendCommand(lang)
  ttsText.sendCommand(ttsMessage)
end


rule "daily_info"
when
  Item calendar_DailyInfo changed to ON or Item GH_DailyInfo received update
then
  var externalTemp = (GF_FamilyRoom_Outdoor_Temperature_Sensor.state as Number).floatValue
  var pressure = (GF_FamilyRoom_Pressure_Sensor.state as Number).floatValue
//  logError("Chromecast", "number {}", externalTemp)
  var ttsMessage = String.format("There is %.1f Celcius outside. Current pressure is %.0f hectopascals.", externalTemp, pressure)
  var lang = "en-gb"

  ttsLanguage.sendCommand(lang)
  ttsText.sendCommand(ttsMessage)
  calendar_DailyInfo.postUpdate(OFF)
end

rule "sensor_info"
when
  Item GH_SensorsInfo received update
then
  var power = (GF_PowerMeter_Current_In_Watts.state as Number).floatValue
  logError("Chromecast", "number {}", power)
  var ttsMessage = String.format("Current power usage is %.0f watts.", power)
  var lang = "en-gb"

  ttsLanguage.sendCommand(lang)
  ttsText.sendCommand(ttsMessage)
//  calendar_DailyInfo.postUpdate(OFF)
end

rule "open-window-temperature-warning"
when
  Time cron "0 */10 6-23 ? * MON-SUN" or Item DebugButton received update 
then
  var warningTemperature = 10
  if (HH_OpenWindowTemperatureAlert.state !== NULL) {
    warningTemperature = (HH_OpenWindowTemperatureAlert.state as Number).intValue
  }
  var externalTemperature = (GF_FamilyRoom_Outdoor_Temperature_Sensor.state as Number).floatValue
  if (externalTemperature < warningTemperature) {
    var ttsMessage = String.format("There is %.1f Celcius outside. Warning level is set to %d Celcius.", externalTemperature, warningTemperature)
    var lang = "en-gb"

    var String openedWindows = ""
    var Boolean opened = false

    if (CIR_GF_FamilyBalcony.state.toString() == "OPEN") {
        openedWindows += " balcony in family room,"
        opened = true
    }
    if (CIR_GF_FamilyRoom.state.toString() == "OPEN") {
        openedWindows += " family room,"
        opened = true
    }
    if (CIR_GF_Kitchen.state.toString() == "OPEN") {
        openedWindows += " kitchen,"
        opened = true
    }
    if (CIR_FF_Bedroom.state.toString() == "OPEN") {
        openedWindows += " bedroom,"
        opened = true
    }
    if (CIR_FF_AliceRoom.state.toString() == "OPEN") {
        openedWindows += " Alice room,"
        opened = true
    }
    if (CIR_FF_AnnRoom.state.toString() == "OPEN") {
        openedWindows += " Ann room,"
        opened = true
    }

    if (opened) {
      ttsMessage = ttsMessage + " Opened windows: " + openedWindows
      ttsLanguage.sendCommand(lang)
      ttsText.sendCommand(ttsMessage)
    }
  }
end
