rule "family_room_led_power"
when
    Item WiFiLEDFamilyRoom_power received update
then
    if (WiFiLEDFamilyRoom_power.state !== NULL) {
        WiFiLED6_power.sendCommand(WiFiLEDFamilyRoom_power.state.toString())
        WiFiLED7_power.sendCommand(WiFiLEDFamilyRoom_power.state.toString())
    }
end

rule "family_room_led_color"
when
    Item WiFiLEDFamilyRoom_color received update
then
    if (WiFiLEDFamilyRoom_color.state !== NULL) {
        WiFiLED6_color.sendCommand(WiFiLEDFamilyRoom_color.state.toString())
        WiFiLED7_color.sendCommand(WiFiLEDFamilyRoom_color.state.toString())
    }
end

rule "family_room_led_dimmer"
when
    Item WiFiLEDFamilyRoom_dimmer received update
then
    if (WiFiLEDFamilyRoom_color.dimmer !== NULL) {
        WiFiLED6_dimmer.sendCommand(WiFiLEDFamilyRoom_dimmer.state.toString())
        WiFiLED7_dimmer.sendCommand(WiFiLEDFamilyRoom_dimmer.state.toString())
    }
end

rule "alice_led_on"
when
//    Time cron "0 55 5 ? * MON,WED" or
//    Time cron "0 50 6 ? * TUE,THU,FRI"
//    Time cron "0 40 7 ? * MON,TUE,WED,THU,FRI"
    Time cron "0 40 6 ? * MON,TUE" or
    Time cron "0 40 5 ? * WED,THU,FRI"
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        if (HH_AliceAtSchool.state.toString() == "ON") {
            WiFiLED2_power.sendCommand(ON)
        }
    }
end

rule "alice_led_off"
when
//    Time cron "0 15 6 ? * MON,WED" or
//    Time cron "0 15 7 ? * TUE,THU,FRI" or
    Time cron "0 20 7 ? * MON,TUE" or
    Time cron "0 20 6 ? * WED,THU,FRI" or
    Time cron "59 59 23 ? * *"
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        WiFiLED2_power.sendCommand(OFF)
    }
end

rule "ann_led_on"
when
//    Time cron "0 40 5 ? * MON,TUE,THU" or
//    Time cron "0 10 6 ? * WED,FRI"
//    Time cron "0 40 7 ? * MON,TUE,WED,THU,FRI"
    Time cron "0 30 7 ? * MON,TUE" or
    Time cron "0 0 7 ? * WED,FRI" or
    Time cron "0 0 6 ? * THU"
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        if (HH_AnnAtSchool.state.toString() == "ON") {
            logInfo ("lock", "Ann led: before on")
            WiFiLED3_power.sendCommand(ON)
        }
    }
end

rule "ann_led_off"
when
//    Time cron "0 20 6 ? * MON,TUE,THU" or
//    Time cron "0 50 6 ? * WED,FRI" or
//    Time cron "0 58 7 ? * MON,TUE,WED,THU,FRI" or
    Time cron "0 0 8 ? * MON,TUE" or
    Time cron "0 20 7 ? * WED,FRI" or
    Time cron "0 20 6 ? * THU" or
    Time cron "59 59 23 ? * *"
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        logInfo ("lock", "Ann led: before off")
        WiFiLED3_power.sendCommand(OFF)
    }
end

rule "work_rule"
when
    Item GH_Work_Scene received update
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        if (calendar_Vacation.state.toString() == "OFF") {
            if (HH_WaldekAtWork.state.toString() == "ON") {
                if (GH_Work_Scene.state.toString() == "ON") {
                    HH_PowermeterPlug01.sendCommand(ON)
//                    HH_PowermeterPlug02.sendCommand(ON)
                    GH_DailyInfo.sendCommand(ON)
                    if (GF_FamilyRoom_Rollershutter_CurrPos.state > 50) {
                        sendCommand(WiFiLED4_color, new HSBType(String::format("%s",transform("MAP", "led.map", "color_green_max"))))
    //                    WiFiLED4_power.sendCommand(ON)
                    }
                } else {
                    HH_PowermeterPlug01.sendCommand(OFF)
//                    HH_PowermeterPlug02.sendCommand(OFF)
                    // GH_DailyInfo.sendCommand(ON)
                    WiFiLED4_power.sendCommand(OFF)
                }
            }
        }
    }
end

rule "ann_office_rule"
when
    Item GH_Ann_Office_Scene received update
then
    if (GF_Presence_Mode.state.toString() == "ON") {
        if (GH_Ann_Office_Scene.state.toString() == "ON") {
            HH_PowermeterPlug02.sendCommand(ON)
        } else {
            HH_PowermeterPlug02.sendCommand(OFF)
        }
    }
end

rule "waldek_window_on"
when
    Time cron "0 1 8 ? * MON,TUE,WED,THU,FRI"
then
    logInfo ("waldek_window_on", "waldek_led_on: {}", HH_WaldekAtWork.state.toString())
    if (GF_Presence_Mode.state.toString() == "ON") {
        if (calendar_Vacation.state.toString() == "OFF") {
            if (HH_WaldekAtWork.state.toString() == "ON") {
                logInfo ("waldek_window_on", "try: waldek_led_on: {}", HH_WaldekAtWork.state.toString())
                GH_Day_Scene.sendCommand(ON)
            }
        }
    }
end

//rule "waldek_led_off"
//when
//    Time cron "0 55 14 ? * MON,TUE,WED,THU,FRI"
//then
//    if (GF_Presence_Mode.state.toString() == "ON") {
//        WiFiLED4_power.sendCommand(OFF)
//    }
//end

rule "goodnight_all_off"
when
    Time cron "0 0 1 ? * *"
then
    GH_Bedroom_Night_Scene.sendCommand(OFF)
    WiFiLED7_power.sendCommand(OFF)
end

rule "debug_desk"
when
    Item WiFiLED4_power received update
then
    if (WiFiLED4_power.state.toString() == "OFF") {
        sendCommand(WiFiLED4_color, new HSBType(String::format("%s",transform("MAP", "led.map", "color_off"))))
    } else {
        sendCommand(WiFiLED4_color, new HSBType(String::format("%s",transform("MAP", "led.map", "color_green_max"))))
    }
end
